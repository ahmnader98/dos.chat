// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users table
model User {
  id                   Int            @id @default(autoincrement())
  username             String         @unique
  email                String         @unique
  conversations        Conversation[] @relation("UserConversations")
  sentChatRequests     ChatRequest[]  @relation("SenderRequest")
  receivedChatRequests ChatRequest[]  @relation("ReceiverRequest")
  Message              Message[]
}

// Conversations table
model Conversation {
  id       Int       @id @default(autoincrement())
  users    User[]    @relation("UserConversations")
  messages Message[]
}

// Messages table
model Message {
  id             Int          @id @default(autoincrement())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  sender         User         @relation(fields: [senderId], references: [id])
  senderId       Int
  messageContent String
  timestamp      DateTime     @default(now())
}

// Chat requests table
model ChatRequest {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  sender     User     @relation(fields: [senderId], references: [id], name: "SenderRequest")
  receiver   User     @relation(fields: [receiverId], references: [id], name: "ReceiverRequest")
  status     String
  timestamp  DateTime @default(now())
}
